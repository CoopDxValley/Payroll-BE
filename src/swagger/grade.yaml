# paths:
#   /grades:
#     post:
#       tags:
#         - Grades
#       summary: Create a new grade
#       description: Create a new grade with name, salary range, and company ID
#       security:
#         - bearerAuth: []
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               type: object
#               required:
#                 - name
#                 - minSalary
#                 - maxSalary
#               properties:
#                 name:
#                   type: string
#                   description: Name of the grade
#                 minSalary:
#                   type: number
#                   description: Minimum salary for the grade
#                 maxSalary:
#                   type: number
#                   description: Maximum salary for the grade
#       responses:
#         "201":
#           description: Grade created successfully
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   message:
#                     type: string
#                   data:
#                     $ref: "#/components/schemas/Grade"
#         "400":
#           description: Invalid input
#         "401":
#           description: Unauthorized
#         "409":
#           description: Grade name already exists or salary range overlaps

#     get:
#       tags:
#         - Grades
#       summary: Get all grades for a company
#       description: Retrieve all active grades for the authenticated user's company
#       security:
#         - bearerAuth: []
#       responses:
#         "200":
#           description: List of grades
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   data:
#                     type: array
#                     items:
#                       $ref: "#/components/schemas/Grade"
#         "401":
#           description: Unauthorized

#   /grades/{id}:
#     parameters:
#       - name: id
#         in: path
#         required: true
#         schema:
#           type: string
#           format: uuid
#         description: Grade ID

#     get:
#       tags:
#         - Grades
#       summary: Get a specific grade
#       description: Retrieve a grade by its ID
#       security:
#         - bearerAuth: []
#       responses:
#         "200":
#           description: Grade details
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   data:
#                     $ref: "#/components/schemas/Grade"
#         "401":
#           description: Unauthorized
#         "404":
#           description: Grade not found

#     put:
#       tags:
#         - Grades
#       summary: Update a grade
#       description: Update an existing grade's details
#       security:
#         - bearerAuth: []
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               type: object
#               properties:
#                 name:
#                   type: string
#                 minSalary:
#                   type: number
#                 maxSalary:
#                   type: number
#       responses:
#         "200":
#           description: Grade updated successfully
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   message:
#                     type: string
#                   data:
#                     $ref: "#/components/schemas/Grade"
#         "400":
#           description: Invalid input
#         "401":
#           description: Unauthorized
#         "404":
#           description: Grade not found
#         "409":
#           description: Grade name already exists or salary range overlaps

#     delete:
#       tags:
#         - Grades
#       summary: Delete a grade
#       description: Soft delete a grade by setting isActive to false
#       security:
#         - bearerAuth: []
#       responses:
#         "200":
#           description: Grade deleted successfully
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   message:
#                     type: string
#         "401":
#           description: Unauthorized
#         "404":
#           description: Grade not found

# components:
#   schemas:
#     Grade:
#       type: object
#       properties:
#         id:
#           type: string
#           format: uuid
#         name:
#           type: string
#         minSalary:
#           type: number
#         maxSalary:
#           type: number
#         companyId:
#           type: string
#           format: uuid
#         isActive:
#           type: boolean
#         createdAt:
#           type: string
#           format: date-time
#         updatedAt:
#           type: string
#           format: date-time
#         company:
#           $ref: "#/components/schemas/Company"
#       required:
#         - id
#         - name
#         - minSalary
#         - maxSalary
#         - companyId
#         - isActive
#         - createdAt
#         - updatedAt

#     Company:
#       type: object
#       properties:
#         id:
#           type: string
#           format: uuid
#         organizationName:
#           type: string
#       required:
#         - id
#         - organizationName
